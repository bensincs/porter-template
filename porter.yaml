# This is the configuration for Porter
# You must define steps for each action, but the rest is optional
# See https://porter.sh/author-bundles for documentation on how to configure your bundle
# Uncomment out the sections below to take full advantage of what Porter can do!

# Version of the porter.yaml schema used by this file.
schemaVersion: 1.0.0-alpha.1

name: porter-example
version: 0.1.0
description: "An example Porter configuration deploying k8s via terraform then deploying a chart via helm"
# registry where the bundle is published to by default
registry: "localhost:5000"

# If you want to customize the Dockerfile in use, uncomment the line below and update the referenced file.
# See https://porter.sh/bundle/custom-dockerfile/
dockerfile: Dockerfile.tmpl

mixins:
  - exec
  - terraform
  - az
  - kubernetes
  - helm3

parameters:
  - name: azure_subscription_id
    type: string
    env: ARM_SUBSCRIPTION_ID
  - name: azure_region
    type: string
  - name: iac_state_resource_group_name
    type: string
  - name: iac_state_storage_account_name
    type: string
  - name: iac_state_container_name
    type: string
credentials:
  - name: azure_sp_client_id
    env: ARM_CLIENT_ID
    applyTo:
      - "install"
      - "upgrade"
      - "uninstall"
    required: true
  - name: azure_sp_client_secret
    env: ARM_CLIENT_SECRET
    applyTo:
      - "install"
      - "upgrade"
      - "uninstall"
    required: true
  - name: azure_tenant_id
    env: ARM_TENANT_ID
    applyTo:
      - "install"
      - "upgrade"
      - "uninstall"
    required: true

install:
  - az:
      description: "Authenticating with Azure"
      suppress-output: true
      arguments:
        - "login"
      flags:
        service-principal:
        allow-no-subscriptions:
        username: "{{ bundle.credentials.azure_sp_client_id }}"
        password: "{{ bundle.credentials.azure_sp_client_secret }}"
        tenant: "{{ bundle.credentials.azure_tenant_id }}"
  - az:
      description: "Selecting desired Azure subscription"
      suppress-output: true
      arguments:
        - "account"
        - "set"
      flags:
        subscription: "{{ bundle.parameters.azure_subscription_id }}"
  - az:
      description: "Creating Azure Resource Group for IaC"
      suppress-output: true
      arguments:
        - "group"
        - "create"
      flags:
        name: "{{ bundle.parameters.iac_state_resource_group_name }}"
        location: "{{ bundle.parameters.azure_region }}"
  - az:
      description: "Creating Storage Account for IaC state"
      suppress-output: true
      arguments:
        - "storage"
        - "account"
        - "create"
      flags:
        name: "{{ bundle.parameters.iac_state_storage_account_name }}"
        location: "{{ bundle.parameters.azure_region }}"
        resource-group: "{{ bundle.parameters.iac_state_resource_group_name }}"
        sku: "Standard_LRS"
  - az:
      description: "Creating Blob Container for IaC state"
      suppress-output: true
      arguments:
        - "storage"
        - "container"
        - "create"
      flags:
        name: "{{ bundle.parameters.iac_state_container_name }}"
        account-name: "{{ bundle.parameters.iac_state_storage_account_name }}"
        public-access: "off"
  - az:
      description: "Bicep deployment"
      arguments:
        - "deployment"
        - "sub"
        - "create"
      flags:
        template-file: "bicep/main.bicep"
        location: "{{ bundle.parameters.azure_region }}"
  # - terraform:
  #     description: "Deploying IaC"
  #     backendConfig:
  #       resource_group_name: "{{ bundle.parameters.iac_state_resource_group_name }}"
  #       storage_account_name: "{{ bundle.parameters.iac_state_storage_account_name }}"
  #       container_name: "{{ bundle.parameters.iac_state_container_name }}"
  #     vars:
  #       location: "{{ bundle.parameters.azure_region }}"
  #     outputs:
  #       - name: cluster_name
  #       - name: cluster_resource_group_name
  # - az:
  #     description: "Downloading Kubernetes credentials"
  #     suppress-output: true
  #     arguments:
  #       - "aks"
  #       - "get-credentials"
  #     flags:
  #       name: "{{ bundle.outputs.cluster_name }}"
  #       resource-group: "{{ bundle.outputs.cluster_resource_group_name }}"
  # - exec:
  #     description: "Kube Login"
  #     command: kubelogin # The command to run, must be on the PATH
  #     arguments: # arguments to pass to the command
  #       - convert-kubeconfig
  #     flags: # flags to pass to the command, porter determines if it is a long (--flag) or short flag (-f)
  #       l: azurecli

  # - kubernetes:
  #     description: "Creating Kubernetes namespaces"
  #     manifests:
  #       - "kubernetes/namespaces.yml"
  #     validate: true
  #     wait: true

  # - helm3:
  #     description: "Installing NGINX Chart"
  #     namespace: applications
  #     chart: charts/nginx
  #     version: "1.0.0"
  #     name: "{{ installation.name }}"

uninstall:
  - terraform:
      description: "Destroying IaC"
      backendConfig:
        resource_group_name: "{{ bundle.parameters.iac_state_resource_group_name }}"
        storage_account_name: "{{ bundle.parameters.iac_state_storage_account_name }}"
        container_name: "{{ bundle.parameters.iac_state_container_name }}"
      vars:
        location: "{{ bundle.parameters.azure_region }}"
      outputs:
        - name: cluster_name
        - name: cluster_resource_group_name
